type Measurement {
  timestamp: Date
  level: Float
  flow: Float
}

type HarvestStatus {
  count: Int
  success: Boolean
  timestamp: Date
  next: Date
  error: String
}

input MeasurementsFilter {
  # Start of period, see gorge for default value
  from: Date
  # End of period, defaults to now
  to: Date
}

type Query {
  # Deprecated, renamed to simply measurements
  lastMeasurements(gaugeId: ID, sectionId: ID, days: Int!): [Measurement]
    @deprecated
  # Retrieves measurements by section or gauge id
  measurements(
    gaugeId: ID
    sectionId: ID
    filter: MeasurementsFilter
    # deprecated use filter instead
    days: Int
  ): [Measurement]
}
