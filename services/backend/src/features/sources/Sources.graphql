enum HarvestMode {
  allAtOnce
  oneByOne
}

type Source {
  # Unique id
  id: ID!
  # Human-friendly data source name
  name: String!
  # Terms of use as given by upstream data provider
  termsOfUse: String
  # Non-nullablle for admin
  script: String @admin
  # Cron schedule
  cron: String @admin
  # Non-nullable for admin
  harvestMode: HarvestMode @admin
  # Upstream provider web page
  url: String
  # Is harvesting ON?
  enabled: Boolean
  # Creation date
  createdAt: Date
  # Last modificatio date
  updatedAt: Date

  # Last harvest operation status
  status: HarvestStatus
  # Regions
  regions(page: Page): SourceRegionConnection!
  # Gauges
  gauges(page: Page): SourceGaugeConnection!
}

type SourceRegionConnection {
  nodes: [Region]!
  count: Int!
}

type SourceGaugeConnection {
  nodes: [Gauge]!
  count: Int!
}

input SourceInput {
  id: ID
  name: String!
  termsOfUse: String
  script: String!
  cron: String
  harvestMode: HarvestMode!
  regions: [RefInput]
  url: String
}

type SourcesList {
  nodes: [Source]!
  count: Int!
}

type Query {
  sources(page: Page): SourcesList!
  source(id: ID): Source
}

type Mutation {
  upsertSource(source: SourceInput!): Source @admin
  removeSource(id: ID!): ID @admin
  toggleSource(id: ID!, enabled: Boolean!): Source @admin
  autofillSource(id: ID!): [Gauge] @admin
  generateSourceSchedule(id: ID!): [Gauge] @admin
}
