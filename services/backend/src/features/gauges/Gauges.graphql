type Gauge {
  # Unique ID
  id: ID!
  # Human-friendly name
  name: String!
  # Unique code from upsteam, or synthetic code if not provided
  code: String!
  # Gauge location
  location: Point
  # Level unit (e.g. m, inches), or null if gauge doesn't measure levels
  levelUnit: String
  # Flow unit (e.g. m3/s, cfs), or null if gauge doesn't measure flows
  flowUnit: String
  # Arbitrary upstream request params
  requestParams: JSON @admin

  # Gauge web page
  url: String
  # Is gauge being harvested?
  enabled: Boolean
  # Creation date (in whitewater.guide)
  createdAt: Date
  # Updated date (in whitewater.guide)
  updatedAt: Date

  # Last known measurement
  latestMeasurement: Measurement @deprecated
  # Deprecated, renamed to latestMeasurement
  lastMeasurement: Measurement @deprecated
  # Last known harvest result
  status: HarvestStatus

  # Gauge's data source
  source: Source!
}

input GaugeInput {
  id: ID
  source: RefInput!
  name: String!
  code: String!
  location: PointInput
  levelUnit: String
  flowUnit: String
  requestParams: JSON
  url: String
}

type GaugesList {
  nodes: [Gauge]!
  count: Int!
}

input GaugesFilter {
  sourceId: ID
  regionId: ID
  search: String
}

type Query {
  gauges(filter: GaugesFilter, page: Page): GaugesList!
  gauge(id: ID): Gauge
}

type Mutation {
  upsertGauge(gauge: GaugeInput!): Gauge @admin
  removeGauge(id: ID!): ID @admin
  removeGauges(sourceId: ID!): [ID] @admin
}
