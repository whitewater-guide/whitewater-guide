version: '3.4'

services:

  # Node.js backend
  backend:
    container_name: ww-backend
    image: 'ww-backend:dev'
    build:
      dockerfile: Dockerfile.dev
    ports:
      - '5775:5775'
      - '3333:3333'
    volumes:
      - 'yarn:/root/.cache/yarn'
      - 'ww-sync:/opt/app:nocopy'

  # Postgres sql database
  db:
    container_name: ww-db
    image: 'ww-db:dev'
    tmpfs:
      - /tmp
      - /var/run/postgresql
      - /var/lib/postgresql/data
    environment:
      - NODE_ENV=development # This is needed to created test db
    ports:
      - '5432:5432'

  # Minio to store images
  minio:
    container_name: ww-minio
    image: 'minio/minio:latest'
    command: server /data
    ports:
      - '9000:9000'
    volumes:
      - type: bind
        source: ../packages/minio/data
        target: /data
      - type: bind
        source: ../packages/minio/config
        target: /root/.minio

  # Caddy reverse proxy
  caddy:
    container_name: ww-caddy
    image: 'ww-caddy:dev'
    tmpfs:
      - /tmp/caddy-cache
    volumes:
      - '../packages/caddy/Caddyfile:/etc/Caddyfile'
    ports:
      - '6001:2015'

  # Imgproxy to generate thumbnails
  imgproxy:
    container_name: ww-imgproxy

  # Redis for sessions and last measurements
  redis:
    container_name: ww-redis
    ports:
      - '6379:6379'
    volumes:
      - type: tmpfs
        target: /data

  # Workers to harvest some data
  workers:
    container_name: ww-workers
    image: 'ww-workers:dev'
    ports:
      - '7080:7080'
volumes:
  yarn:
    labels:
      guide.whitewater: ""
  ww-sync:
    external: true
