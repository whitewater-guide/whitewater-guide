type Bounds {
  sw: [Float],
  ne: [Float],
  autocomplete: Boolean,
}

type Region {
  _id: ID!,
  name: String,
  description: String,
  season: String,
  seasonNumeric: [Int]!,
  bounds: Bounds,
  pois: [Point]!,
  sources: [Source]!,
  rivers: [River]!,
}

input CreateRegionInput {
  name: String!,
}

input EditRegionInput {
  _id: ID!,
  name: String,
  description: String,
  season: String,
  seasonNumeric: [Int],
  pois: [PointInput],
}

type Query {
  regions(language:String): [Region]!,
  region(_id: ID, language:String):Region,
}

type Mutation {
  createRegion(region:CreateRegionInput!):Region,
  editRegion(region:EditRegionInput!, language:String):Region,
  removeRegion(regionId:ID!):Boolean,
}