enum HarvestMode {
  ALL_AT_ONCE,
  ONE_BY_ONE,
}

type Source implements INamed {
  _id: ID!
  name: String!
  termsOfUse: String
  script: String!
  cron: String
  harvestMode: HarvestMode!
  url: String
  enabled: Boolean
  regions: [Region]!
  gauges: [Gauge]!
}

input SourceInput {
  _id: ID
  name: String!
  termsOfUse: String
  script: String!
  cron: String
  harvestMode: HarvestMode!
  regions: [RefInput]
  url: String
}

type Query {
  sources(language:String): [Source]!
  source(_id: ID, language: String): Source
}

type Mutation {
  upsertSource(source:SourceInput!, language: String):Source
  removeSource(_id:ID!):Boolean
  autofillSource(_id:ID!):Boolean
  generateSourceSchedule(_id:ID!):Boolean
  setSourceEnabled(_id:ID!, enabled:Boolean!): Source
}