type River {
  id: ID!
  language: String!
  name: String!
  altNames: [String!]
  region: Region!
  createdAt: Date
  updatedAt: Date
  sections: RiverSectionConnection!
}

type RiverSectionConnection {
  nodes: [Section]!
  count: Int!
}

input RiverInput {
  id: ID
  name: String!
  altNames: [String!]
  region: RefInput!
}

type RiversList {
  nodes: [River]!
  count: Int!
}

input RiversFilter {
  regionId: ID
}

type Query {
  rivers(language: String, page: Page, filter: RiversFilter): RiversList!
  river(id: ID, language: String): River
}

type Mutation {
  upsertRiver(region: RiverInput!, language: String): River
  removeRiver(id: ID!): ID
}
