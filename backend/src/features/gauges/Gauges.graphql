type Gauge {
  id: ID!
  name: String!
  language: String!
  code: String!
  location: Point
  levelUnit: String
  flowUnit: String
  requestParams: JSON
  cron: String
  lastTimestamp: Date
  lastLevel: Float
  lastFlow: Float
  url: String
  enabled: Boolean
  createdAt: Date
  updatedAt: Date

  source: Source!
  # measurements(startDate:Date!, endDate:Date!): [Measurement]!
}

input GaugeInput {
  id: ID
  source: RefInput!
  name: String!
  code: String!
  location: PointInput
  levelUnit: String
  flowUnit: String
  requestParams: JSON
  cron: String
  url: String
  enabled: Boolean
}

type GaugesList {
  nodes: [Gauge]!
  count: Int!
}

type Query {
  gauges(sourceId: ID, language: String, page: Page): GaugesList!
  gauge(id: ID, language:String): Gauge
}

type Mutation {
  upsertGauge(gauge:GaugeInput!, language:String):Gauge
  removeGauge(id: ID!): ID
  # setGaugesEnabled(id:ID, sourceId:ID, enabled:Boolean!):[Gauge]!
}

