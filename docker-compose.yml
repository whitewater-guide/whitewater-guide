version: '3.8'

x-commons: &ww-commons
  labels:
    guide.whitewater: ''

services:
  # Postgres sql database
  db:
    <<: *ww-commons
    container_name: ww-db
    environment:
      - POSTGRES_DB=wwguide
      - POSTGRES_PASSWORD=whitewater
      - PGDATA=/var/lib/postgresql/data/pgdata
    image: timescale/timescaledb-postgis:1.6.0-pg11
    command:
      # These settings enable faster pg_restore
      - postgres
      - -carchive_mode=off
      - -cmax_wal_senders=0
      - -cwal_level=minimal
    volumes:
      - type: tmpfs
        target: /tmp
      - type: tmpfs
        target: /run/postgresql
      - type: tmpfs
        target: /var/lib/postgresql/data
      - type: bind
        source: ./services/db/config
        target: /docker-entrypoint-initdb.d
    ports:
      - '5432:5432'

  # Minio to store images
  minio:
    <<: *ww-commons
    container_name: ww-minio
    image: 'minio/minio:RELEASE.2020-09-08T23-05-18Z'
    command: server /data
    environment:
      - MINIO_ACCESS_KEY=__minio_access_key__
      - MINIO_SECRET_KEY=__minio_secret__
    ports:
      - '9000:9000'
    volumes:
      - type: bind
        source: ./dev-mount/minio/data
        target: /data
      - type: bind
        source: ./dev-mount/minio/config
        target: /root/.minio
      - type: bind
        source: ./dev-mount/minio/log/
        target: /var/log

  # imageproxy to generate thumbnails
  imageproxy:
    <<: *ww-commons
    container_name: ww-imageproxy
    image: 'darthsim/imgproxy:v2.14'
    environment:
      - AWS_ACCESS_KEY_ID=__minio_access_key__
      - AWS_SECRET_ACCESS_KEY=__minio_secret__
      - IMGPROXY_KEY=abc123
      - IMGPROXY_SALT=abc123
      - IMGPROXY_USE_ETAG=true
      - IMGPROXY_GZIP_COMPRESSION=0 # why compress images?
      - IMGPROXY_IGNORE_SSL_VERIFICATION=true
      - IMGPROXY_USE_S3=true
      - IMGPROXY_S3_ENDPOINT=http://minio:9000
      - IMGPROXY_TTL=31536000 # 1 year
    ports:
      - '7050:8080'
    networks:
      default:
        aliases:
          - imageproxy.local

  # Gorge to harvest some data
  gorge:
    <<: *ww-commons
    container_name: ww-gorge
    image: docker.pkg.github.com/whitewater-guide/gorge/gorge:1.18.1
    depends_on:
      - db
      - redis
    command:
      [
        '--pg-db',
        'gorge',
        '--pg-password',
        'whitewater',
        '--db-chunk-size',
        '1000',
      ]
    ports:
      - '7080:7080'
    networks:
      default:
        aliases:
          - gorge.local

  # Redis for sessions and last measurements
  redis:
    <<: *ww-commons
    container_name: ww-redis
    image: redis:4-alpine
    ports:
      - '6379:6379'
    volumes:
      - type: tmpfs
        target: /data
