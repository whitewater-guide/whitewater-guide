diff --git a/node_modules/victory-native/lib/helpers/native-zoom-helpers.js b/node_modules/victory-native/lib/helpers/native-zoom-helpers.js
index ecc6c32..693926a 100644
--- a/node_modules/victory-native/lib/helpers/native-zoom-helpers.js
+++ b/node_modules/victory-native/lib/helpers/native-zoom-helpers.js
@@ -62,8 +62,10 @@ const Helpers = {
 
   getScaleFactorNative(evt, props) {
     const { touches } = evt.nativeEvent;
-    const originalPinchDistance = props.originalPinchDistance || 0;
     const currentPinchDistance = this.getPinchDistance(touches);
+    // patch: originally, when zooming out, originalPinchDistance is 0, so the first time factor is < 1
+    // so we start with serious zoom in and then begin to zoom out, and getting nowhere as a result
+    const originalPinchDistance = props.originalPinchDistance ||  currentPinchDistance;
     const scaledPinchChange = (currentPinchDistance - originalPinchDistance) / screenSize;
     return 1 - scaledPinchChange;
   },
@@ -72,7 +74,11 @@ const Helpers = {
     const [from, to] = currentDomain;
     const range = Math.abs(to - from);
     const minimumZoom = props.minimumZoom && props.minimumZoom[axis];
-    const factor = this.getScaleFactorNative(evt, props);
+    let factor = this.getScaleFactorNative(evt, props);
+    // patch: we want to zoom out faster
+    if (factor > 1) {
+      factor = factor * factor;
+    }
     if (minimumZoom && range <= minimumZoom && factor < 1) {
       return currentDomain;
     }
@@ -93,7 +99,8 @@ const Helpers = {
 };
 
 const makeThrottledHandler = (handler) => {
-  const throttledHandler = throttle(handler, 16, { leading: true });
+  // Patch: original throttle was 16, which equals to 60fps. 30fps will do it
+  const throttledHandler = throttle(handler, 32, { leading: true });
   return (evt, ...otherParams) => {
     evt.persist(); // ensure that the react native event is persisted!
     return throttledHandler(evt, ...otherParams);
