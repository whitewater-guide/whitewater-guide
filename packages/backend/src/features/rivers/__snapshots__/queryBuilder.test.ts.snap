// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`details should build correct query with region 1`] = `
with region_ref as (
    select
        regions_view.id,
        regions_view.name,
        regions_view.language
    from
        regions_view
    where
        regions_view.language = 'en'
    order by
        regions_view.name asc,
        regions_view.created_at asc,
        regions_view.id asc
)
select
    rivers_view.id,
    rivers_view.language,
    rivers_view.name,
    rivers_view.alt_names,
    rivers_view.created_at,
    rivers_view.updated_at, (
        select
            to_json(region_ref.*)
        from
            region_ref
        where
            region_ref.id = rivers_view.region_id) as region
from
    rivers_view
where
    rivers_view.language = 'en'
order by
    rivers_view.name asc,
    rivers_view.created_at asc,
    rivers_view.id asc

`;

exports[`details should build correct query with sections connection 1`] = `
with sections_connection as (
    select
        sections_view.id,
        sections_view.language,
        sections_view.name,
        sections_view.river_id
    from
        sections_view
    where
        sections_view.language = 'en'
    order by
        sections_view.name asc,
        sections_view.created_at asc,
        sections_view.id asc
)
select
    rivers_view.id,
    rivers_view.language,
    rivers_view.name,
    rivers_view.alt_names,
    rivers_view.created_at,
    rivers_view.updated_at, (with sections_connection_internal as (
            select
                sections_connection.*,
                COALESCE(count(sections_connection.*)
                    OVER (),
                    0)
            from
                sections_connection
            where
                sections_connection.river_id = rivers_view.id
)
        select
            json_build_object('count', (
                    select
                        sections_connection_internal.count from sections_connection_internal
                    limit 1),
                'nodes', (
                    select
                        COALESCE(json_agg (sections_connection_internal.*),
                            '[]'::json)
                    from
                        sections_connection_internal))) as sections
from
    rivers_view
where
    rivers_view.language = 'en'
order by
    rivers_view.name asc,
    rivers_view.created_at asc,
    rivers_view.id asc

`;

exports[`details should build correct query without connections 1`] = `
select
    rivers_view.id,
    rivers_view.language,
    rivers_view.name,
    rivers_view.alt_names,
    rivers_view.created_at,
    rivers_view.updated_at
from
    rivers_view
where
    rivers_view.language = 'en'
order by
    rivers_view.name asc,
    rivers_view.created_at asc,
    rivers_view.id asc

`;

exports[`list should build correct query with region 1`] = `
with region_ref as (
    select
        regions_view.id,
        regions_view.name,
        regions_view.language
    from
        regions_view
    where
        regions_view.language = 'en'
    order by
        regions_view.name asc,
        regions_view.created_at asc,
        regions_view.id asc
)
select
    rivers_view.id,
    rivers_view.language,
    rivers_view.name,
    rivers_view.alt_names,
    rivers_view.created_at,
    rivers_view.updated_at, (
        select
            to_json(region_ref.*)
        from
            region_ref
        where
            region_ref.id = rivers_view.region_id) as region, count(rivers_view.*)
OVER ()
from
    rivers_view
where
    rivers_view.language = 'en'
order by
    rivers_view.name asc,
    rivers_view.created_at asc,
    rivers_view.id asc

`;

exports[`list should build correct query with sections connection 1`] = `
with sections_connection as (
    select
        sections_view.id,
        sections_view.river_id
    from
        sections_view
    where
        sections_view.language = 'en'
    order by
        sections_view.name asc,
        sections_view.created_at asc,
        sections_view.id asc
)
select
    rivers_view.id,
    rivers_view.language,
    rivers_view.name,
    rivers_view.alt_names,
    rivers_view.created_at,
    rivers_view.updated_at, (with sections_connection_internal as (
            select
                sections_connection.*,
                COALESCE(count(sections_connection.*)
                    OVER (),
                    0)
            from
                sections_connection
            where
                sections_connection.river_id = rivers_view.id
)
        select
            json_build_object('count', (
                    select
                        sections_connection_internal.count from sections_connection_internal
                    limit 1))) as sections,
count(rivers_view.*)
OVER ()
from
    rivers_view
where
    rivers_view.language = 'en'
order by
    rivers_view.name asc,
    rivers_view.created_at asc,
    rivers_view.id asc

`;

exports[`list should build correct query without connections 1`] = `
select
    rivers_view.id,
    rivers_view.language,
    rivers_view.name,
    rivers_view.alt_names,
    rivers_view.created_at,
    rivers_view.updated_at,
    count(rivers_view.*)
    OVER ()
from
    rivers_view
where
    rivers_view.language = 'en'
order by
    rivers_view.name asc,
    rivers_view.created_at asc,
    rivers_view.id asc

`;
