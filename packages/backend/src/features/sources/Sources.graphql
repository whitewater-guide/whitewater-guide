enum HarvestMode {
  allAtOnce,
  oneByOne,
}

type Source {
  id: ID!
  name: String!
  termsOfUse: String
  script: String!
  cron: String
  harvestMode: HarvestMode!
  url: String
  enabled: Boolean
  regions: SourceRegionConnection!
  gauges: SourceGaugeConnection!
  createdAt: Date
  updatedAt: Date
  status: HarvestStatus
}

type SourceRegionConnection {
  nodes: [Region]!
  count: Int!
}

type SourceGaugeConnection {
  nodes: [Gauge]!
  count: Int!
}

input SourceInput {
  id: ID
  name: String!
  termsOfUse: String
  script: String!
  cron: String
  harvestMode: HarvestMode!
  regions: [RefInput]
  url: String
}

type SourcesList {
  nodes: [Source]!
  count: Int!
}

type Query {
  sources(page: Page): SourcesList!
  source(id: ID): Source
}

type Mutation {
  upsertSource(source: SourceInput!): Source
  removeSource(id: ID!): ID
  toggleSource(id: ID!, enabled: Boolean!): Source
  autofillSource(id:ID!): [Gauge]
  generateSourceSchedule(id: ID!): [Gauge]
}