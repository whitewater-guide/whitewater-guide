server {
    listen 80;
    server_name {{SERVER_NAME}};

    # Tell Nginx and Passenger where your app's 'public' directory is
    root /home/app/webapp/bundle/public;

    # Turn on Passenger
    #passenger_enabled on;
    # Tell Passenger that your app is a Meteor app
    #passenger_app_type node;
    #passenger_startup_file main.js;

    # Tell your app where MongoDB is
    passenger_env_var MONGO_URL mongodb://mongo:27017/wwdb;
    # Tell your app what its root URL is
    passenger_env_var ROOT_URL http://{{SERVER_NAME}};
    passenger_env_var METEOR_SETTINGS '{{METEOR_SETTINGS}}';

    location / {
        try_files $uri /index.html;
    }

    # Make nginx compatible with certbot process
    location ^~ /.well-known {
        allow all;
        root  /data/letsencrypt/;
    }

    # Of all meteor backend, we only need graphql endpoint and websocket subscriptions endpoint
    location ~ ^/(graphql|thumbs|subscriptions|subscriptions/) {
        passenger_base_uri /;
        passenger_app_root /home/app/webapp/bundle;
        passenger_document_root /home/app/webapp/bundle/public;
        passenger_enabled on;

        passenger_app_type node;
        passenger_startup_file main.js;
    }

    # managed by Certbot
    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/{{SERVER_NAME}}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{SERVER_NAME}}/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;

}
