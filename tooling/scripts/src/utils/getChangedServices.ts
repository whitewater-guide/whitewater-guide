import { readJSONSync } from 'fs-extra';
import { basename, resolve } from 'path';

interface LernaChangedEntry {
  name: string;
  version: string;
  location: string;
  private: boolean;
}

/**
 * This function gets list of docker services that should be published in lerna postpublish hook
 * It gets this information from `lerna-changed.json` file, which is generated by lerna on first step
 * of publish lifecycle, i.e. `preversion`
 */
export const getChangedServices = () => {
  const result: string[] = [];
  const servicesBase = resolve(process.cwd(), 'services');
  const changed: LernaChangedEntry[] = readJSONSync('lerna-changed.json');
  for (const { location } of changed) {
    if (location.startsWith(servicesBase)) {
      result.push(basename(location));
    }
  }
  return result;
};
